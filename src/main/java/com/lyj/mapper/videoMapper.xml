<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lyj.dao.VideoDao">
    <resultMap id="videoMap" type="video">
        <id column="id" property="id"></id>
        <result column="title" property="title"></result>
        <result column="detail" property="detail"></result>
        <result column="time" property="time"></result>
        <result column="speaker_id" property="speakerId"></result>
        <result column="speaker_name" property="speaker"></result>
        <result column="course_id" property="courseId"></result>
        <result column="course_title" property="course"></result>
        <result column="video_url" property="videoUrl"></result>
        <result column="image_url" property="imgUrl"></result>
        <result column="play_num" property="playNum"></result>
        <result column="comment" property="comment"></result>
    </resultMap>

    <select id="findAllVideos" parameterType="video" resultMap="videoMap">
        select v.*,s.speaker_name,c.course_title
        from video v
        join speaker s
        on v.speaker_id=s.id
        join course c
        on v.course_id=c.id
        <where>
            <if test="title != null and title != ''">
            and title like CONCAT('%','${title}','%')
        </if>
            <if test="speakerId != null and speakerId != ''">
                and speaker_id=#{speakerId}
            </if>
            <if test="courseId != null and courseId != ''">
                and course_id=#{courseId}
            </if>
        </where>
    </select>

    <select id="selectVideoById" parameterType="int" resultMap="videoMap">
        select v.*,s.speaker_name,c.course_title
        from video v
        join speaker s
        on v.speaker_id=s.id
        join course c
        on v.course_id=c.id
        where v.id=#{id}
    </select>

    <update id="updateVideo" parameterType="video">
        update video set
        title=#{title},
        detail=#{detail},
        time=#{time},
        speaker_id=#{speakerId},
        course_id=#{courseId},
        video_url=#{videoUrl},
        image_url=#{imgUrl},
        comment=#{comment}
        where id=#{id}
    </update>

    <insert id="addVideo" parameterType="video">
        insert into video
        (title,detail,time,speaker_id,course_id,video_url,image_url,comment)
        values
        (#{title}, #{detail}, #{time}, #{speakerId}, #{courseId}, #{videoUrl}, #{imgUrl}, #{comment})
    </insert>

    <delete id="delete" parameterType="map">
        delete from video where id in
        <foreach collection="array" item="id" open="(" close=")" separator="," >
            #{id}
        </foreach>
    </delete>

</mapper>